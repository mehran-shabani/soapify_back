# Generated by Django 5.2.5 on 2025-08-22 09:39

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DailyStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('total_encounters', models.PositiveIntegerField(default=0)),
                ('active_users', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='AlertRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('metric_name', models.CharField(max_length=100)),
                ('operator', models.CharField(choices=[('gt', 'Greater Than'), ('gte', 'Greater Than or Equal'), ('lt', 'Less Than'), ('lte', 'Less Than or Equal'), ('eq', 'Equal'), ('ne', 'Not Equal')], max_length=10)),
                ('threshold', models.FloatField()),
                ('severity', models.CharField(choices=[('info', 'Info'), ('warning', 'Warning'), ('critical', 'Critical')], max_length=20)),
                ('description', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('notification_channels', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BusinessMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_name', models.CharField(max_length=100)),
                ('value', models.FloatField()),
                ('dimensions', models.JSONField(default=dict)),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'indexes': [models.Index(fields=['metric_name', 'period_start'], name='analytics_b_metric__5ba47f_idx'), models.Index(fields=['period_start', 'period_end'], name='analytics_b_period__e27a11_idx')],
                'unique_together': {('metric_name', 'period_start', 'period_end')},
            },
        ),
        migrations.CreateModel(
            name='Metric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('metric_type', models.CharField(choices=[('counter', 'Counter'), ('gauge', 'Gauge'), ('histogram', 'Histogram'), ('timer', 'Timer')], max_length=20)),
                ('value', models.FloatField()),
                ('tags', models.JSONField(default=dict, help_text='Key-value pairs for metric dimensions')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'indexes': [models.Index(fields=['name', 'timestamp'], name='analytics_m_name_b1e977_idx'), models.Index(fields=['metric_type', 'timestamp'], name='analytics_m_metric__5d4c33_idx'), models.Index(fields=['timestamp'], name='analytics_m_timesta_77f16a_idx')],
            },
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('firing', 'Firing'), ('resolved', 'Resolved'), ('acknowledged', 'Acknowledged')], default='firing', max_length=20)),
                ('metric_value', models.FloatField()),
                ('message', models.TextField()),
                ('metadata', models.JSONField(default=dict)),
                ('fired_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('acknowledged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='analytics.alertrule')),
            ],
            options={
                'indexes': [models.Index(fields=['rule', 'status'], name='analytics_a_rule_id_27c93b_idx'), models.Index(fields=['status', 'fired_at'], name='analytics_a_status_e314d6_idx'), models.Index(fields=['fired_at'], name='analytics_a_fired_a_d06529_idx')],
            },
        ),
        migrations.CreateModel(
            name='PerformanceMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('endpoint', models.CharField(max_length=200)),
                ('method', models.CharField(max_length=10)),
                ('response_time_ms', models.PositiveIntegerField()),
                ('status_code', models.PositiveIntegerField()),
                ('error_message', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['endpoint', 'timestamp'], name='analytics_p_endpoin_c26a76_idx'), models.Index(fields=['status_code', 'timestamp'], name='analytics_p_status__ad88bc_idx'), models.Index(fields=['timestamp'], name='analytics_p_timesta_08f72c_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=50)),
                ('resource', models.CharField(blank=True, max_length=100)),
                ('resource_id', models.PositiveIntegerField(blank=True, null=True)),
                ('metadata', models.JSONField(default=dict)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('session_id', models.CharField(blank=True, max_length=40)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['user', 'action'], name='analytics_u_user_id_b287be_idx'), models.Index(fields=['action', 'timestamp'], name='analytics_u_action_2b16c2_idx'), models.Index(fields=['timestamp'], name='analytics_u_timesta_2b8b17_idx'), models.Index(fields=['session_id'], name='analytics_u_session_0e759b_idx')],
            },
        ),
    ]
