{
  "base_url": "https://django-m.chbk.app",
  "api_endpoints": [
    {
      "category": "Authentication & JWT",
      "endpoints": [
        {
          "name": "Token Obtain",
          "path": "/api/auth/token/",
          "method": "POST",
          "description": "Get JWT access and refresh tokens",
          "payload": {
            "username": "string",
            "password": "string"
          },
          "expected_response": {
            "access": "string",
            "refresh": "string"
          }
        },
        {
          "name": "Token Refresh",
          "path": "/api/auth/token/refresh/",
          "method": "POST",
          "description": "Refresh JWT access token",
          "payload": {
            "refresh": "string"
          },
          "expected_response": {
            "access": "string"
          }
        },
        {
          "name": "Token Verify",
          "path": "/api/auth/token/verify/",
          "method": "POST",
          "description": "Verify JWT token validity",
          "payload": {
            "token": "string"
          },
          "expected_response": {}
        }
      ]
    },
    {
      "category": "Accounts",
      "endpoints": [
        {
          "name": "Send Verification Code",
          "path": "/api/auth/send-code/",
          "method": "POST",
          "description": "Send verification code to phone/email",
          "payload": {
            "phone": "string",
            "email": "string"
          },
          "expected_response": {
            "message": "string"
          }
        },
        {
          "name": "Register",
          "path": "/api/auth/register/",
          "method": "POST",
          "description": "Register new user account",
          "payload": {
            "username": "string",
            "password": "string",
            "phone": "string",
            "verification_code": "string"
          },
          "expected_response": {
            "user": "object",
            "access": "string",
            "refresh": "string"
          }
        },
        {
          "name": "Login",
          "path": "/api/auth/login/",
          "method": "POST",
          "description": "Login with username/password",
          "payload": {
            "username": "string",
            "password": "string"
          },
          "expected_response": {
            "access": "string",
            "refresh": "string",
            "user": "object"
          }
        },
        {
          "name": "Login with Phone",
          "path": "/api/auth/login-phone/",
          "method": "POST",
          "description": "Login with phone and verification code",
          "payload": {
            "phone": "string",
            "verification_code": "string"
          },
          "expected_response": {
            "access": "string",
            "refresh": "string",
            "user": "object"
          }
        },
        {
          "name": "Reset Password",
          "path": "/api/auth/reset-password/",
          "method": "POST",
          "description": "Reset user password",
          "payload": {
            "phone": "string",
            "verification_code": "string",
            "new_password": "string"
          },
          "expected_response": {
            "message": "string"
          }
        },
        {
          "name": "Current User",
          "path": "/api/auth/current-user/",
          "method": "GET",
          "description": "Get current authenticated user info",
          "auth_required": true,
          "expected_response": {
            "user": "object"
          }
        },
        {
          "name": "Logout",
          "path": "/api/auth/logout/",
          "method": "POST",
          "description": "Logout and invalidate tokens",
          "auth_required": true,
          "expected_response": {
            "message": "string"
          }
        }
      ]
    },
    {
      "category": "Encounters",
      "endpoints": [
        {
          "name": "List Encounters",
          "path": "/api/encounters/",
          "method": "GET",
          "description": "Get list of encounters",
          "auth_required": true,
          "expected_response": {
            "results": "array",
            "count": "number"
          }
        },
        {
          "name": "Create Encounter",
          "path": "/api/encounters/create/",
          "method": "POST",
          "description": "Create new encounter",
          "auth_required": true,
          "payload": {
            "patient_name": "string",
            "encounter_type": "string"
          },
          "expected_response": {
            "id": "string",
            "patient_name": "string",
            "created_at": "string"
          }
        },
        {
          "name": "Encounter Detail",
          "path": "/api/encounters/{encounter_id}/",
          "method": "GET",
          "description": "Get encounter details",
          "auth_required": true,
          "expected_response": {
            "id": "string",
            "patient_name": "string",
            "status": "string"
          }
        },
        {
          "name": "Get Presigned URL",
          "path": "/api/audio/presigned-url/",
          "method": "POST",
          "description": "Get presigned URL for audio upload",
          "auth_required": true,
          "payload": {
            "encounter_id": "string",
            "filename": "string",
            "content_type": "string"
          },
          "expected_response": {
            "upload_url": "string",
            "audio_chunk_id": "string"
          }
        },
        {
          "name": "Commit Audio File",
          "path": "/api/audio/commit/",
          "method": "POST",
          "description": "Commit uploaded audio file",
          "auth_required": true,
          "payload": {
            "audio_chunk_id": "string"
          },
          "expected_response": {
            "message": "string"
          }
        }
      ]
    },
    {
      "category": "Speech-to-Text (STT)",
      "endpoints": [
        {
          "name": "Transcribe",
          "path": "/api/stt/transcribe/",
          "method": "POST",
          "description": "Start STT processing",
          "auth_required": true,
          "payload": {
            "audio_chunk_id": "string"
          },
          "expected_response": {
            "task_id": "string"
          }
        },
        {
          "name": "Transcription Status",
          "path": "/api/stt/status/{task_id}/",
          "method": "GET",
          "description": "Check transcription status",
          "auth_required": true,
          "expected_response": {
            "status": "string",
            "result": "object"
          }
        },
        {
          "name": "Transcription History",
          "path": "/api/stt/history/",
          "method": "GET",
          "description": "Get transcription history",
          "auth_required": true,
          "expected_response": {
            "results": "array"
          }
        },
        {
          "name": "Upload and Transcribe",
          "path": "/api/stt/upload-transcribe/",
          "method": "POST",
          "description": "Upload audio file and start transcription",
          "auth_required": true,
          "payload": {
            "audio_file": "file"
          },
          "expected_response": {
            "task_id": "string"
          }
        },
        {
          "name": "Bulk Transcribe",
          "path": "/api/stt/bulk-transcribe/",
          "method": "POST",
          "description": "Bulk transcription of multiple files",
          "auth_required": true,
          "payload": {
            "audio_files": "array"
          },
          "expected_response": {
            "task_ids": "array"
          }
        },
        {
          "name": "Process Encounter STT",
          "path": "/api/stt/encounter/{encounter_id}/process/",
          "method": "POST",
          "description": "Process STT for specific encounter",
          "auth_required": true,
          "expected_response": {
            "task_id": "string"
          }
        },
        {
          "name": "Get Transcript",
          "path": "/api/stt/transcript/{audio_chunk_id}/",
          "method": "GET",
          "description": "Get transcript for audio chunk",
          "auth_required": true,
          "expected_response": {
            "transcript": "string",
            "confidence": "number"
          }
        },
        {
          "name": "Get Encounter Transcript",
          "path": "/api/stt/encounter/{encounter_id}/transcript/",
          "method": "GET",
          "description": "Get full transcript for encounter",
          "auth_required": true,
          "expected_response": {
            "transcript": "string",
            "segments": "array"
          }
        },
        {
          "name": "Update Transcript Segment",
          "path": "/api/stt/transcript/segment/{segment_id}/",
          "method": "PUT",
          "description": "Update transcript segment",
          "auth_required": true,
          "payload": {
            "text": "string"
          },
          "expected_response": {
            "segment": "object"
          }
        },
        {
          "name": "Search Transcript",
          "path": "/api/stt/search/",
          "method": "GET",
          "description": "Search in transcripts",
          "auth_required": true,
          "query_params": {
            "q": "string"
          },
          "expected_response": {
            "results": "array"
          }
        }
      ]
    },
    {
      "category": "NLP Processing",
      "endpoints": [
        {
          "name": "Generate SOAP",
          "path": "/api/nlp/generate/{encounter_id}/",
          "method": "POST",
          "description": "Start SOAP extraction from transcript",
          "auth_required": true,
          "expected_response": {
            "task_id": "string"
          }
        },
        {
          "name": "Get SOAP Draft",
          "path": "/api/nlp/drafts/{encounter_id}/",
          "method": "GET",
          "description": "Get SOAP draft for encounter",
          "auth_required": true,
          "expected_response": {
            "draft": "object",
            "sections": "object"
          }
        },
        {
          "name": "Update SOAP Section",
          "path": "/api/nlp/drafts/{encounter_id}/update-section/",
          "method": "PUT",
          "description": "Update specific SOAP section",
          "auth_required": true,
          "payload": {
            "section": "string",
            "content": "string"
          },
          "expected_response": {
            "updated_section": "object"
          }
        },
        {
          "name": "Get Checklist",
          "path": "/api/nlp/drafts/{encounter_id}/checklist/",
          "method": "GET",
          "description": "Get checklist for encounter",
          "auth_required": true,
          "expected_response": {
            "checklist": "array"
          }
        },
        {
          "name": "Update Checklist Item",
          "path": "/api/nlp/drafts/{encounter_id}/checklist/{item_id}/",
          "method": "PUT",
          "description": "Update checklist item",
          "auth_required": true,
          "payload": {
            "completed": "boolean",
            "notes": "string"
          },
          "expected_response": {
            "item": "object"
          }
        }
      ]
    },
    {
      "category": "Outputs",
      "endpoints": [
        {
          "name": "Finalize",
          "path": "/api/outputs/finalize/",
          "method": "POST",
          "description": "Finalize and generate output documents",
          "auth_required": true,
          "payload": {
            "encounter_id": "string",
            "format": "string"
          },
          "expected_response": {
            "task_id": "string"
          }
        },
        {
          "name": "Get Finalized SOAP",
          "path": "/api/outputs/finalized/{encounter_id}/",
          "method": "GET",
          "description": "Get finalized SOAP document",
          "auth_required": true,
          "expected_response": {
            "document": "object",
            "status": "string"
          }
        },
        {
          "name": "Generate Download URL",
          "path": "/api/outputs/download/{file_id}/",
          "method": "GET",
          "description": "Generate download URL for output file",
          "auth_required": true,
          "expected_response": {
            "download_url": "string",
            "expires_at": "string"
          }
        },
        {
          "name": "Create Patient Link",
          "path": "/api/outputs/link-patient/",
          "method": "POST",
          "description": "Create patient access link",
          "auth_required": true,
          "payload": {
            "encounter_id": "string",
            "patient_email": "string"
          },
          "expected_response": {
            "link_id": "string",
            "access_url": "string"
          }
        },
        {
          "name": "List Output Files",
          "path": "/api/outputs/files/{encounter_id}/",
          "method": "GET",
          "description": "List output files for encounter",
          "auth_required": true,
          "expected_response": {
            "files": "array"
          }
        },
        {
          "name": "Access Patient SOAP",
          "path": "/api/outputs/access/{link_id}/",
          "method": "GET",
          "description": "Access SOAP via patient link",
          "expected_response": {
            "document": "object"
          }
        }
      ]
    },
    {
      "category": "Uploads",
      "endpoints": [
        {
          "name": "Create Session",
          "path": "/api/uploads/session/create/",
          "method": "POST",
          "description": "Create upload session",
          "auth_required": true,
          "payload": {
            "filename": "string",
            "total_size": "number"
          },
          "expected_response": {
            "session_id": "string"
          }
        },
        {
          "name": "Upload Chunk",
          "path": "/api/uploads/chunk/",
          "method": "POST",
          "description": "Upload file chunk",
          "auth_required": true,
          "payload": {
            "session_id": "string",
            "chunk_number": "number",
            "chunk_data": "file"
          },
          "expected_response": {
            "message": "string"
          }
        },
        {
          "name": "Commit Session",
          "path": "/api/uploads/commit/",
          "method": "POST",
          "description": "Commit upload session",
          "auth_required": true,
          "payload": {
            "session_id": "string"
          },
          "expected_response": {
            "file_id": "string"
          }
        },
        {
          "name": "Download Final",
          "path": "/api/uploads/final/{session_id}/",
          "method": "GET",
          "description": "Download final uploaded file",
          "auth_required": true,
          "expected_response": "file"
        },
        {
          "name": "S3 Presign Upload",
          "path": "/api/uploads/s3/presign/",
          "method": "POST",
          "description": "Get S3 presigned upload URL",
          "auth_required": true,
          "payload": {
            "filename": "string",
            "content_type": "string"
          },
          "expected_response": {
            "upload_url": "string",
            "fields": "object"
          }
        },
        {
          "name": "S3 Confirm Upload",
          "path": "/api/uploads/s3/confirm/",
          "method": "POST",
          "description": "Confirm S3 upload completion",
          "auth_required": true,
          "payload": {
            "file_key": "string"
          },
          "expected_response": {
            "message": "string"
          }
        }
      ]
    },
    {
      "category": "Integrations",
      "endpoints": [
        {
          "name": "Send OTP",
          "path": "/api/integrations/otp/send/",
          "method": "POST",
          "description": "Send OTP for authentication",
          "payload": {
            "phone": "string"
          },
          "expected_response": {
            "message": "string"
          }
        },
        {
          "name": "Verify OTP",
          "path": "/api/integrations/otp/verify/",
          "method": "POST",
          "description": "Verify OTP code",
          "payload": {
            "phone": "string",
            "code": "string"
          },
          "expected_response": {
            "valid": "boolean",
            "token": "string"
          }
        },
        {
          "name": "Extend Session",
          "path": "/api/integrations/session/extend/",
          "method": "POST",
          "description": "Extend user session",
          "auth_required": true,
          "expected_response": {
            "expires_at": "string"
          }
        },
        {
          "name": "Get Session Status",
          "path": "/api/integrations/session/status/",
          "method": "GET",
          "description": "Get current session status",
          "auth_required": true,
          "expected_response": {
            "active": "boolean",
            "expires_at": "string"
          }
        },
        {
          "name": "Integration Logout",
          "path": "/api/integrations/logout/",
          "method": "POST",
          "description": "Logout from integrations",
          "auth_required": true,
          "expected_response": {
            "message": "string"
          }
        },
        {
          "name": "Search Patients",
          "path": "/api/integrations/patients/search/",
          "method": "GET",
          "description": "Search patients in external system",
          "auth_required": true,
          "query_params": {
            "q": "string"
          },
          "expected_response": {
            "patients": "array"
          }
        },
        {
          "name": "Request Patient Access",
          "path": "/api/integrations/patients/{patient_ref}/access/",
          "method": "POST",
          "description": "Request access to patient data",
          "auth_required": true,
          "expected_response": {
            "access_granted": "boolean"
          }
        },
        {
          "name": "Get Patient Info",
          "path": "/api/integrations/patients/{patient_ref}/info/",
          "method": "GET",
          "description": "Get patient information",
          "auth_required": true,
          "expected_response": {
            "patient": "object"
          }
        },
        {
          "name": "Integration Health",
          "path": "/api/integrations/health/",
          "method": "GET",
          "description": "Check integration health status",
          "expected_response": {
            "status": "string",
            "services": "object"
          }
        }
      ]
    },
    {
      "category": "Checklist",
      "endpoints": [
        {
          "name": "Checklist Catalog",
          "path": "/api/checklist/catalog/",
          "method": "GET",
          "description": "Get checklist catalog",
          "auth_required": true,
          "expected_response": {
            "results": "array"
          }
        },
        {
          "name": "Create Checklist Catalog",
          "path": "/api/checklist/catalog/",
          "method": "POST",
          "description": "Create new checklist catalog",
          "auth_required": true,
          "payload": {
            "name": "string",
            "description": "string"
          },
          "expected_response": {
            "id": "number",
            "name": "string"
          }
        },
        {
          "name": "Checklist Evaluations",
          "path": "/api/checklist/evaluations/",
          "method": "GET",
          "description": "Get checklist evaluations",
          "auth_required": true,
          "expected_response": {
            "results": "array"
          }
        },
        {
          "name": "Create Checklist Evaluation",
          "path": "/api/checklist/evaluations/",
          "method": "POST",
          "description": "Create checklist evaluation",
          "auth_required": true,
          "payload": {
            "catalog_id": "number",
            "encounter_id": "string"
          },
          "expected_response": {
            "id": "number",
            "status": "string"
          }
        },
        {
          "name": "Checklist Templates",
          "path": "/api/checklist/templates/",
          "method": "GET",
          "description": "Get checklist templates",
          "auth_required": true,
          "expected_response": {
            "results": "array"
          }
        },
        {
          "name": "Create Checklist Template",
          "path": "/api/checklist/templates/",
          "method": "POST",
          "description": "Create checklist template",
          "auth_required": true,
          "payload": {
            "name": "string",
            "items": "array"
          },
          "expected_response": {
            "id": "number",
            "name": "string"
          }
        }
      ]
    },
    {
      "category": "Search",
      "endpoints": [
        {
          "name": "Search Content",
          "path": "/api/search/",
          "method": "GET",
          "description": "Search content across system",
          "auth_required": true,
          "query_params": {
            "q": "string",
            "type": "string"
          },
          "expected_response": {
            "results": "array",
            "total": "number"
          }
        },
        {
          "name": "Search Suggestions",
          "path": "/api/search/suggestions/",
          "method": "GET",
          "description": "Get search suggestions",
          "auth_required": true,
          "query_params": {
            "q": "string"
          },
          "expected_response": {
            "suggestions": "array"
          }
        },
        {
          "name": "Reindex Encounter",
          "path": "/api/search/reindex/",
          "method": "POST",
          "description": "Reindex encounter for search",
          "auth_required": true,
          "payload": {
            "encounter_id": "string"
          },
          "expected_response": {
            "message": "string"
          }
        },
        {
          "name": "Search Analytics",
          "path": "/api/search/analytics/",
          "method": "GET",
          "description": "Get search analytics",
          "auth_required": true,
          "expected_response": {
            "analytics": "object"
          }
        }
      ]
    },
    {
      "category": "Analytics",
      "endpoints": [
        {
          "name": "System Overview",
          "path": "/api/analytics/overview/",
          "method": "GET",
          "description": "Get system overview analytics",
          "auth_required": true,
          "expected_response": {
            "overview": "object"
          }
        },
        {
          "name": "User Analytics",
          "path": "/api/analytics/users/",
          "method": "GET",
          "description": "Get user analytics",
          "auth_required": true,
          "expected_response": {
            "users": "object"
          }
        },
        {
          "name": "Performance Analytics",
          "path": "/api/analytics/performance/",
          "method": "GET",
          "description": "Get performance analytics",
          "auth_required": true,
          "expected_response": {
            "performance": "object"
          }
        },
        {
          "name": "Business Metrics",
          "path": "/api/analytics/business-metrics/",
          "method": "GET",
          "description": "Calculate business metrics",
          "auth_required": true,
          "expected_response": {
            "metrics": "object"
          }
        },
        {
          "name": "Record Activity",
          "path": "/api/analytics/activity/",
          "method": "POST",
          "description": "Record user activity",
          "auth_required": true,
          "payload": {
            "activity_type": "string",
            "metadata": "object"
          },
          "expected_response": {
            "recorded": "boolean"
          }
        },
        {
          "name": "Record Metric",
          "path": "/api/analytics/metric/",
          "method": "POST",
          "description": "Record custom metric",
          "auth_required": true,
          "payload": {
            "metric_name": "string",
            "value": "number"
          },
          "expected_response": {
            "recorded": "boolean"
          }
        },
        {
          "name": "Get Alerts",
          "path": "/api/analytics/alerts/",
          "method": "GET",
          "description": "Get system alerts",
          "auth_required": true,
          "expected_response": {
            "alerts": "array"
          }
        },
        {
          "name": "Acknowledge Alert",
          "path": "/api/analytics/alerts/{alert_id}/acknowledge/",
          "method": "POST",
          "description": "Acknowledge system alert",
          "auth_required": true,
          "expected_response": {
            "acknowledged": "boolean"
          }
        },
        {
          "name": "Check Alert Rules",
          "path": "/api/analytics/alerts/check/",
          "method": "POST",
          "description": "Check alert rules",
          "auth_required": true,
          "expected_response": {
            "alerts_triggered": "array"
          }
        }
      ]
    },
    {
      "category": "Embeddings",
      "endpoints": [
        {
          "name": "Embeddings Ping",
          "path": "/api/embeddings/ping/",
          "method": "GET",
          "description": "Health check for embeddings service",
          "expected_response": {
            "ok": "boolean"
          }
        }
      ]
    },
    {
      "category": "System",
      "endpoints": [
        {
          "name": "Health Check",
          "path": "/healthz/",
          "method": "GET",
          "description": "System health check",
          "expected_response": "ok"
        }
      ]
    }
  ],
  "test_scenarios": [
    {
      "name": "Authentication Flow",
      "description": "Complete authentication flow test",
      "steps": [
        "Send verification code",
        "Register or login",
        "Get current user",
        "Refresh token",
        "Logout"
      ]
    },
    {
      "name": "Audio Processing Pipeline",
      "description": "End-to-end audio processing test",
      "steps": [
        "Create encounter",
        "Get presigned URL",
        "Upload audio",
        "Commit audio",
        "Start transcription",
        "Check transcription status",
        "Get transcript"
      ]
    },
    {
      "name": "SOAP Generation",
      "description": "SOAP note generation workflow",
      "steps": [
        "Generate SOAP from transcript",
        "Get SOAP draft",
        "Update SOAP sections",
        "Get checklist",
        "Update checklist items",
        "Finalize output"
      ]
    },
    {
      "name": "Search and Analytics",
      "description": "Search and analytics functionality",
      "steps": [
        "Search content",
        "Get suggestions",
        "Record activity",
        "Get analytics",
        "Check system health"
      ]
    }
  ]
}