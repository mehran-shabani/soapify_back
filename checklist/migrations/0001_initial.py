# Generated by Django 5.2.5 on 2025-08-22 09:39

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('encounters', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChecklistCatalog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('subjective', 'Subjective'), ('objective', 'Objective'), ('assessment', 'Assessment'), ('plan', 'Plan'), ('general', 'General')], max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('keywords', models.JSONField(default=list, help_text='Keywords to match in transcript')),
                ('question_template', models.TextField(help_text='Template for generating questions')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_checklists', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['category', 'priority', 'title'],
            },
        ),
        migrations.CreateModel(
            name='ChecklistEval',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('covered', 'Covered'), ('missing', 'Missing'), ('partial', 'Partially Covered'), ('unclear', 'Unclear')], max_length=20)),
                ('confidence_score', models.FloatField(default=0.0, help_text='AI confidence score (0.0-1.0)')),
                ('evidence_text', models.TextField(blank=True, help_text='Text from transcript that supports this evaluation')),
                ('anchor_positions', models.JSONField(default=list, help_text='Character positions in transcript')),
                ('generated_question', models.TextField(blank=True, help_text='Generated follow-up question')),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('catalog_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='checklist.checklistcatalog')),
                ('encounter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checklist_evals', to='encounters.encounter')),
            ],
            options={
                'ordering': ['catalog_item__category', 'catalog_item__priority'],
            },
        ),
        migrations.CreateModel(
            name='ChecklistInstance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('catalog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='checklist.checklistcatalog')),
                ('encounter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='encounters.encounter')),
            ],
        ),
        migrations.CreateModel(
            name='ChecklistTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('specialty', models.CharField(blank=True, max_length=50)),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ChecklistTemplateItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_required', models.BooleanField(default=True)),
                ('catalog_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='checklist.checklistcatalog')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='checklist.checklisttemplate')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='checklisttemplate',
            name='catalog_items',
            field=models.ManyToManyField(through='checklist.ChecklistTemplateItem', to='checklist.checklistcatalog'),
        ),
        migrations.AddIndex(
            model_name='checklistcatalog',
            index=models.Index(fields=['category', 'is_active'], name='checklist_c_categor_b88382_idx'),
        ),
        migrations.AddIndex(
            model_name='checklistcatalog',
            index=models.Index(fields=['priority'], name='checklist_c_priorit_afe4b9_idx'),
        ),
        migrations.AddIndex(
            model_name='checklisteval',
            index=models.Index(fields=['encounter', 'status'], name='checklist_c_encount_5ae12b_idx'),
        ),
        migrations.AddIndex(
            model_name='checklisteval',
            index=models.Index(fields=['confidence_score'], name='checklist_c_confide_c21758_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='checklisteval',
            unique_together={('encounter', 'catalog_item')},
        ),
        migrations.AlterUniqueTogether(
            name='checklistinstance',
            unique_together={('encounter', 'catalog')},
        ),
        migrations.AlterUniqueTogether(
            name='checklisttemplateitem',
            unique_together={('template', 'catalog_item')},
        ),
    ]
