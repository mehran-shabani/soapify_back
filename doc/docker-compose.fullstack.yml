version: "3.8"

services:
  # Database
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: ${DB_NAME:-soapify}
      POSTGRES_USER: ${DB_USER:-soapify}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-soapify_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-soapify} -d ${DB_NAME:-soapify}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data
    ports:
      - "127.0.0.1:6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  web:
    build: .
    command: >
      sh -c "
      python manage.py migrate --noinput &&
      python manage.py collectstatic --noinput &&
      gunicorn soapify.wsgi:application
        --bind 0.0.0.0:8000
        --workers ${GUNICORN_WORKERS:-4}
        --timeout 120"
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql://${DB_USER:-soapify}:${DB_PASSWORD:-soapify_password}@db:5432/${DB_NAME:-soapify}
      REDIS_URL: redis://redis:6379/0
    volumes:
      - ./media:/app/media
      - ./staticfiles:/app/staticfiles
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Celery Worker
  celery:
    build: .
    command: celery -A soapify worker -l info
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql://${DB_USER:-soapify}:${DB_PASSWORD:-soapify_password}@db:5432/${DB_NAME:-soapify}
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/1
    volumes:
      - ./media:/app/media
    depends_on:
      - db
      - redis

  # Celery Beat
  celery-beat:
    build: .
    command: celery -A soapify beat -l info
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql://${DB_USER:-soapify}:${DB_PASSWORD:-soapify_password}@db:5432/${DB_NAME:-soapify}
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/1
    depends_on:
      - db
      - redis

  # Frontend React App
  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
    ports:
      - "80:80"
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
    depends_on:
      - web

  # Frontend Development Server (optional - for development)
  frontend-dev:
    build:
      context: ./front
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
    volumes:
      - ./front/src:/app/src
      - ./front/public:/app/public
    depends_on:
      - web
    profiles:
      - dev

  # Nginx (Production-like setup)
  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx.fullstack.conf:/etc/nginx/conf.d/default.conf:ro
      - ./staticfiles:/app/staticfiles:ro
      - ./media:/app/media:ro
    depends_on:
      - web
      - frontend
    profiles:
      - production

volumes:
  postgres_data:
  redis_data: