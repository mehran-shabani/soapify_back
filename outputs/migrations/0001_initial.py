# Generated by Django 5.2.5 on 2025-08-22 09:39

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('encounters', '0001_initial'),
        ('nlp', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='OutputFormat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('format_type', models.CharField(choices=[('pdf', 'PDF'), ('json', 'JSON'), ('markdown', 'Markdown'), ('html', 'HTML'), ('docx', 'DOCX')], max_length=20)),
                ('template_name', models.CharField(blank=True, max_length=200)),
                ('settings', models.JSONField(blank=True, default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ReportTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('template_type', models.CharField(max_length=50)),
                ('template_content', models.TextField(blank=True)),
                ('variables', models.JSONField(blank=True, default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FinalizedSOAP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('finalizing', 'Finalizing'), ('finalized', 'Finalized'), ('exported', 'Exported'), ('error', 'Error')], default='finalizing', max_length=20)),
                ('finalized_data', models.JSONField(default=dict, help_text='Final SOAP data after GPT-4o processing')),
                ('markdown_content', models.TextField(blank=True, help_text='Generated Markdown content')),
                ('pdf_file_path', models.CharField(blank=True, help_text='S3 path to PDF file', max_length=500)),
                ('json_file_path', models.CharField(blank=True, help_text='S3 path to JSON file', max_length=500)),
                ('finalization_model', models.CharField(default='gpt-4o', max_length=50)),
                ('finalization_version', models.CharField(default='v1.0', max_length=20)),
                ('quality_score', models.FloatField(blank=True, help_text='Final quality assessment', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('finalized_at', models.DateTimeField(blank=True, null=True)),
                ('exported_at', models.DateTimeField(blank=True, null=True)),
                ('finalized_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('soap_draft', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='finalized_soap', to='nlp.soapdraft')),
            ],
            options={
                'db_table': 'finalized_soaps',
            },
        ),
        migrations.CreateModel(
            name='OutputFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_type', models.CharField(choices=[('pdf_doctor', 'PDF for Doctor'), ('pdf_patient', 'PDF for Patient'), ('json', 'JSON Export'), ('markdown', 'Markdown Export')], max_length=20)),
                ('file_path', models.CharField(help_text='S3 object key', max_length=500)),
                ('file_size', models.PositiveIntegerField(help_text='File size in bytes')),
                ('presigned_url', models.URLField(blank=True, help_text='Pre-signed download URL')),
                ('presigned_expires_at', models.DateTimeField(blank=True, null=True)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('generation_time_seconds', models.FloatField(blank=True, null=True)),
                ('template_version', models.CharField(default='v1.0', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('finalized_soap', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='output_files', to='outputs.finalizedsoap')),
            ],
            options={
                'db_table': 'output_files',
            },
        ),
        migrations.CreateModel(
            name='GeneratedReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_path', models.CharField(max_length=500)),
                ('file_size', models.PositiveIntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('queued', 'Queued'), ('generating', 'Generating'), ('completed', 'Completed'), ('failed', 'Failed')], default='queued', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('finalized_soap', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generated_reports', to='outputs.finalizedsoap')),
                ('output_format', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='outputs.outputformat')),
            ],
        ),
        migrations.CreateModel(
            name='PatientInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.CharField(max_length=100)),
                ('patient_name', models.CharField(max_length=200)),
                ('date_of_birth', models.CharField(blank=True, max_length=20)),
                ('gender', models.CharField(blank=True, max_length=20)),
                ('additional_info', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('encounter', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='patient_info', to='encounters.encounter')),
            ],
        ),
        migrations.CreateModel(
            name='PatientLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('access_token', models.CharField(max_length=255, unique=True)),
                ('patient_phone', models.CharField(blank=True, help_text='For SMS delivery', max_length=15)),
                ('patient_email', models.EmailField(blank=True, help_text='For email delivery', max_length=254)),
                ('delivery_method', models.CharField(choices=[('sms', 'SMS'), ('email', 'Email'), ('direct', 'Direct Link')], default='sms', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('viewed', 'Viewed'), ('expired', 'Expired'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('expires_at', models.DateTimeField(help_text='Link expiration time')),
                ('max_views', models.IntegerField(default=5, help_text='Maximum number of views allowed')),
                ('view_count', models.IntegerField(default=0)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('first_viewed_at', models.DateTimeField(blank=True, null=True)),
                ('last_viewed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('finalized_soap', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_links', to='outputs.finalizedsoap')),
            ],
            options={
                'db_table': 'patient_links',
            },
        ),
        migrations.CreateModel(
            name='DeliveryLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_method', models.CharField(max_length=20)),
                ('recipient', models.CharField(help_text='Phone number or email', max_length=255)),
                ('status', models.CharField(choices=[('queued', 'Queued'), ('sending', 'Sending'), ('sent', 'Sent'), ('failed', 'Failed'), ('bounced', 'Bounced')], default='queued', max_length=20)),
                ('provider', models.CharField(help_text='SMS/Email provider used', max_length=50)),
                ('provider_message_id', models.CharField(blank=True, max_length=255)),
                ('provider_response', models.JSONField(default=dict, help_text='Provider API response')),
                ('queued_at', models.DateTimeField(auto_now_add=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('retry_count', models.IntegerField(default=0)),
                ('max_retries', models.IntegerField(default=3)),
                ('patient_link', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delivery_logs', to='outputs.patientlink')),
            ],
            options={
                'db_table': 'delivery_logs',
            },
        ),
        migrations.AddIndex(
            model_name='finalizedsoap',
            index=models.Index(fields=['soap_draft'], name='finalized_s_soap_dr_4cb33b_idx'),
        ),
        migrations.AddIndex(
            model_name='finalizedsoap',
            index=models.Index(fields=['status'], name='finalized_s_status_b2d089_idx'),
        ),
        migrations.AddIndex(
            model_name='finalizedsoap',
            index=models.Index(fields=['created_at'], name='finalized_s_created_0c0e4d_idx'),
        ),
        migrations.AddIndex(
            model_name='outputfile',
            index=models.Index(fields=['finalized_soap', 'file_type'], name='output_file_finaliz_0bcb8b_idx'),
        ),
        migrations.AddIndex(
            model_name='outputfile',
            index=models.Index(fields=['generated_at'], name='output_file_generat_f66c2d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='outputfile',
            unique_together={('finalized_soap', 'file_type')},
        ),
        migrations.AddIndex(
            model_name='generatedreport',
            index=models.Index(fields=['finalized_soap', 'status'], name='outputs_gen_finaliz_68c919_idx'),
        ),
        migrations.AddIndex(
            model_name='generatedreport',
            index=models.Index(fields=['created_at'], name='outputs_gen_created_c328bc_idx'),
        ),
        migrations.AddIndex(
            model_name='patientlink',
            index=models.Index(fields=['link_id'], name='patient_lin_link_id_697033_idx'),
        ),
        migrations.AddIndex(
            model_name='patientlink',
            index=models.Index(fields=['access_token'], name='patient_lin_access__df348b_idx'),
        ),
        migrations.AddIndex(
            model_name='patientlink',
            index=models.Index(fields=['status'], name='patient_lin_status_41bf2e_idx'),
        ),
        migrations.AddIndex(
            model_name='patientlink',
            index=models.Index(fields=['expires_at'], name='patient_lin_expires_216c66_idx'),
        ),
        migrations.AddIndex(
            model_name='deliverylog',
            index=models.Index(fields=['patient_link', 'status'], name='delivery_lo_patient_a6b580_idx'),
        ),
        migrations.AddIndex(
            model_name='deliverylog',
            index=models.Index(fields=['status', 'queued_at'], name='delivery_lo_status_8f6fe8_idx'),
        ),
    ]
